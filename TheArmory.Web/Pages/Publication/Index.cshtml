@page
@model TheArmory.Web.Pages.Publication.Index

@{
    ViewData["Title"] = "Публикация";
}

<style>
    .btn-block {
        width: 100%;
    }
    
    #image-area {
        width: 100%;
        height: 500px;
        overflow: hidden;
        position: relative;
    }
    
    #image-area img {
        width: auto;
        height: 100%;
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        margin: auto;
    }
    
    .image-cell {
        width: 100px; /* Ширина ячейки */
        height: 100px; /* Высота ячейки */
        overflow: hidden; /* Скрытие избыточного контента */
        display: flex; /* Использование flexbox */
        align-items: center; /* Выравнивание по вертикали */
        justify-content: center; /* Выравнивание по горизонтали */
        margin: 5px; /* Отступы между ячейками */
    }

</style>

<div class="row">
    <div class="col-md-1 text-center d-flex align-items-center justify-content-center">
        <button type="button" class="btn btn-secondary h-50" onclick="prevImage()">&#60;</button>
    </div>
    <div class="col-md-10 text-center">
        <div id="image-area" class="position-relative">
            <img id="current-image" src="/Default/Images/Ad/DefoultAdImage.png" alt="Image" class="img-fluid">
        </div>
    </div>
    <div class="col-md-1 text-center d-flex align-items-center justify-content-center">
        <button type="button" class="btn btn-secondary h-50" onclick="nextImage()">&#62;</button>
    </div>
</div>

<!-- Контейнер для ячеек с изображениями -->
<div id="thumbnails-container" class="row mt-3"></div>

<div class="row mt-3">
    <div class="col-md-1 text-center"></div>
    <div class="col-md-5 text-center">
        <label class="btn btn-primary btn-block">
            Добавить
            <input type="file" id="file-input" accept="image/*" multiple style="display: none;">
        </label>
    </div>
    <div class="col-md-5 text-center">
        <button type="button" class="btn btn-danger btn-block">Удалить</button>
    </div>
    <div class="col-md-1 text-center"></div>
</div>

<div class="row mt-3">
    <div class="col-md-12">
        <form>
            <div class="form-group">
                <label for="name">Наименование:</label>
                <input type="text" class="form-control" id="name" name="name" placeholder="Введите наименование" maxlength="255">
            </div>
            <div class="form-group">
                <label for="price">Цена:</label>
                <input type="text" class="form-control" id="price" name="price" placeholder="Введите цену" oninput="validatePrice(this)">
            </div>
            <div class="form-group">
                <label for="description">Описание:</label>
                <textarea class="form-control" id="description" name="description" placeholder="Введите описание" oninput="autoResize(this)"></textarea>
            </div>
            <div class="form-group">
                <label for="youtubeLink">Ссылка на YouTube видео с обзором:</label>
                <input type="text" class="form-control" id="youtubeLink" name="youtubeLink" placeholder="Введите ссылку на YouTube видео">
            </div>
            <div class="form-group">
                <label for="conditionId">Состояние:</label>
                <select class="form-control" id="conditionId" name="conditionId">
                    @foreach (var condition in Model.Conditions)
                    {
                        <option value="@condition.Id">@condition.Name</option>
                    }
                </select>
            </div>
            <div class="form-group my-2">
                <label for="regionId">Регион:</label>
                <select class="form-control" id="regionId" name="regionId">
                    @foreach (var region in Model.Regions)
                    {
                        <option value="@region.Id">@region.Code @region.Name</option>
                    }
                </select>
            </div>
            <div id="map" style="width: 600px; height: 400px"></div>

            <button type="submit" class="btn btn-primary">Сохранить</button>
        </form>
    </div>
</div>

<script src="https://api-maps.yandex.ru/v3/?apikey=d8ed85d4-a4d3-4811-895b-20643a517a47&lang=ru_RU"></script>
<script>
    function autoResize(textarea) {
        textarea.style.height = 'auto'; // Устанавливаем высоту текстового поля в режиме авто
        textarea.style.height = (textarea.scrollHeight) + 'px'; // Устанавливаем высоту текстового поля равной его высоте контента
    }
    
    function validatePrice(input) {
        input.value = input.value.replace(/[^0-9.]/g, ''); // Заменяем все символы, кроме цифр и точки, на пустую строку
        // Удалить лишние точки
        var countDots = (input.value.match(/\./g) || []).length; // Подсчитываем количество точек в значении поля ввода
        if (countDots > 1) { // Если количество точек больше 1
            input.value = input.value.replace(/\./g, ''); // Удаляем все точки из значения поля ввода, кроме первой
        }
    }
    
    let images = []; // Массив для хранения путей к изображениям
    let currentImageIndex = 0; // Индекс текущего изображения
    
    function prevImage() {
        if (images.length < 2) 
            return; 
        if (currentImageIndex > 0) { 
            currentImageIndex--; 
        } else { 
            currentImageIndex = images.length - 1; 
        }
        updateImage(); 
    }
    
    function nextImage() {
        if (images.length < 2)
            return;
        if (currentImageIndex < images.length - 1) { 
            currentImageIndex++; 
        } else { 
            currentImageIndex = 0; 
        }
        updateImage(); 
    }
    
    function updateImage() {
        var image = document.getElementById("current-image"); 
        image.src = images[currentImageIndex];
    }
    
    function handleFileSelect(event) {
        if (images.length >= 5) { // Проверяем, есть ли уже 5 изображений
            alert("Вы уже добавили максимальное количество изображений.");
            return;
        }
    
        let files = event.target.files;
        let thumbnailsContainer = document.getElementById('thumbnails-container');
        let numberOfImagesToAdd = Math.min(files.length, 5 - images.length); // Определяем количество изображений, которые можно добавить
        let numberOfImagesAdded = 0; // Счетчик добавленных изображений
    
        for (let i = 0; i < files.length && numberOfImagesAdded < numberOfImagesToAdd; i++) {
            let reader = new FileReader();
            reader.onload = function (e) {
                images.push(e.target.result);
    
                let thumbnailContainer = document.createElement('div');
                thumbnailContainer.className = 'col-md text-center image-cell';
                let thumbnail = document.createElement('img');
                thumbnail.className = 'img-thumbnail';
                thumbnail.src = e.target.result;
                thumbnailContainer.appendChild(thumbnail);
                thumbnailsContainer.appendChild(thumbnailContainer);
    
                numberOfImagesAdded++;
    
                if (images.length === 5) { // Если теперь в массиве images 5 изображений, показываем кнопки управления
                    document.querySelectorAll('.image-controls').forEach(function (element) {
                        element.style.display = 'flex';
                    });
                }
            };
            reader.readAsDataURL(files[i]);
        }
        updateImage(); // Обновляем основное изображение после добавления
    }
    document.getElementById('file-input').addEventListener('change', handleFileSelect, false); // Добавляем обработчик события change на элементе file-input
    
    initMap();
    
    async function initMap() {
        // Промис `ymaps3.ready` будет зарезолвлен, когда загрузятся все компоненты основного модуля API
        await ymaps3.ready;
    
        const {YMap, YMapDefaultSchemeLayer} = ymaps3;
    
        // Иницилиазируем карту
        const map = new YMap(
            // Передаём ссылку на HTMLElement контейнера
            document.getElementById('map'),
    
            // Передаём параметры инициализации карты
            {
                location: {
                    // Координаты центра карты
                    center: [37.588144, 55.733842],
    
                    // Уровень масштабирования
                    zoom: 10
                }
            }
        );
    
        // Добавляем слой для отображения схематической карты
        map.addChild(new YMapDefaultSchemeLayer());
    }
    
</script>