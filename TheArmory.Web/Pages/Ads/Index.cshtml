@page
@model Index
@{
    ViewData["Title"] = "Объявления";
}

<style>
    .filter-header {
        font-size: 1.25rem;
        font-weight: bold;
        margin-bottom: 10px;
    }

    .form-group {
        margin-bottom: 1rem;
    }

    .form-control, .form-select, .input-group-text, .page-link, .btn {
        border-radius: 0.25rem;
    }

    .page-link {
        color: #007bff;
    }

    .page-item.active .page-link {
        background-color: #007bff;
        border-color: #007bff;
    }

    .pagination .page-item {
        margin: 0 2px;
    }

    .filter-container {
        background: #f8f9fa;
        border-radius: 0.25rem;
        padding: 20px;
        margin-bottom: 20px;
    }

    .ad-tile-container {
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
    }

    .ad-tile {
        flex: 0 1 calc(25% - 20px);
    }

    .ad-tile img {
        width: 100%;
        border-radius: 0.25rem;
    }

    .ad-tile h5 {
        font-size: 1rem;
        margin-top: 10px;
    }
</style>

<form id="form" method="post" asp-page-handler="Filter">
    <div class="container-fluid d-flex flex-column min-vh-100">
        <div class="row">
            <!-- Фильтры -->
            <div class="col-md-2 filter-container">
                <h5 class="filter-header"><i class="bi bi-filter"></i> Фильтры</h5>
                <div class="form-group">
                    <label class="small text-muted" for="price-from">₽ Цена от:</label>
                    <div class="input-group input-group-sm">
                        <div class="input-group-prepend">
                            <span class="input-group-text">₽</span>
                        </div>
                        <input type="text" class="form-control" asp-for="QueryParams.PriceFrom" value="@Model.QueryParams.PriceFrom" id="price-from" placeholder="От" maxlength="13" oninput="validateDecimalInput(this)">
                    </div>
                </div>
                <div class="form-group">
                    <label class="small text-muted" for="price-to">₽ Цена до:</label>
                    <div class="input-group input-group-sm">
                        <div class="input-group-prepend">
                            <span class="input-group-text">₽</span>
                        </div>
                        <input type="text" class="form-control" asp-for="QueryParams.PriceTo" value="@Model.QueryParams.PriceTo" id="price-to" placeholder="До" maxlength="13" oninput="validateDecimalInput(this)">
                    </div>
                </div>
                <div class="form-group">
                    <label class="small text-muted" for="region"><i class="bi bi-globe"></i> Регион:</label>
                    <select asp-for="QueryParams.RegionId" class="form-select form-select-sm" id="category-select">
                        <option value="">Регион</option>
                        @foreach (var region in Model.AdFilterViewModel.Regions)
                        {
                            <option value="@region.Id">@region.Name</option>
                        }
                    </select>
                </div>
                <div class="form-group">
                    <label class="small text-muted" for="category"><i class="bi bi-tags"></i> Категория:</label>
                    <select asp-for="QueryParams.CategoryId" class="form-select form-select-sm">
                        <option value="">Категория</option>
                        @foreach (var category in Model.AdFilterViewModel.Categories)
                        {
                            <option value="@category.Id">@category.Name</option>
                        }
                    </select>
                </div>
                <div class="form-group">
                    <button type="submit" class="btn btn-primary fs-6 mt-3 w-100"><i class="bi bi-funnel me-2"></i>Отфильтровать</button>
                </div>
            </div>

            <div class="col-md-10">
                <div class="row mb-3">
                    <div class="col-md-10">
                        <h4>Всего активных объявлений: @Model.QueryResult.TotalCount</h4>
                    </div>
                </div>
                <div class="row mb-3 align-items-center">
                    <!-- Сортировка -->
                    <div class="col-md-2">
                        <div class="form-group w-100 mb-0">
                            <select class="form-control" id="category" asp-for="QueryParams.OrderBy">
                                <option>Сначала новые</option>
                                <option>Сначала старые</option>
                                <option>Сначала дешевле</option>
                                <option>Сначала дороже</option>
                            </select>
                        </div>
                    </div>
                    <!-- Строка поиска -->
                    <div class="col-md-8">
                        <input type="text" asp-for="QueryParams.FilterText" class="form-control" placeholder="Поиск...">
                    </div>
                    <div class="col-md-2">
                        <button type="submit" class="btn btn-success w-100">Поиск</button>
                    </div>
                </div>

                <!-- Плитки с объявлениями -->
                <div class="ad-tile-container">
                    @if (Model.TileAds is not null && Model.TileAds.Any())
                    {
                        @foreach (var ad in Model.TileAds)
                        {
                            ad.BaseUrl = Model.BaseUrl;
                            <div class="ad-tile">
                                @await Html.PartialAsync("AdTile", ad)
                            </div>
                        }
                    }
                    else
                    {
                        <h1>Объявлений не найдено</h1>
                    }
                </div>
            </div>
        </div>

        <!-- Форма с пагинацией -->
        <div class="mt-auto">
            <div class="row">
                <input type="hidden" id="pageNumber" asp-for="@Model.QueryParams.PageNumber"/>
                <div class="col-md-12">
                    <nav aria-label="Page navigation">
                        <ul class="pagination justify-content-center" id="pagination">
                            <li class="page-item @((Model.QueryResult.PageNumber == 1) ? "d-none" : "")">
                                <button type="submit" class="page-link" tabindex="-1" aria-disabled="true" onclick="paginate(this)"><</button>
                            </li>
                            @for (var i = 1; i <= Model.QueryResult.TotalPages; i++)
                            {
                                <li class="page-item @((Model.QueryResult.PageNumber == i) ? "active" : "")">
                                    <button type="submit" class="page-link" onclick="paginate(this)">@i</button>
                                </li>
                            }
                            <li class="page-item @((Model.QueryResult.PageNumber == Model.QueryResult.TotalPages) ? "d-none" : "")">
                                <button type="submit" class="page-link" onclick="paginate(this)">></button>
                            </li>
                        </ul>
                    </nav>
                </div>
            </div>
        </div>
    </div>
</form>

<script>
    function validateDecimalInput(input) {
        input.value = input.value.replace(/[^0-9.]/g, ''); // Разрешить только цифры и точку
        let parts = input.value.split('.');
        if (parts.length > 2) {
            input.value = parts[0] + '.' + parts[1].slice(0, 2); // Ограничить количество знаков после точки до двух
        } else if (parts.length === 2 && parts[1].length > 2) {
            input.value = parts[0] + '.' + parts[1].slice(0, 2); // Ограничить количество знаков после точки до двух
        }
        if (input.value.length > 13) {
            input.value = input.value.slice(0, 13); // Ограничить количество символов
        }
    }
</script>
<script>
    function paginate(button) {
        var pageNumber = button.textContent;
        var pageNumberInput = document.getElementById("pageNumber");
        
        if (pageNumber != "<" && pageNumber != ">") {
            pageNumberInput.value = pageNumber;
        } else if (pageNumber == "<") {
            pageNumberInput.value = @Model.QueryResult.PageNumber - 1;
        } else if (pageNumber == ">") {
            pageNumberInput.value = @Model.QueryResult.PageNumber + 1;
        }
    }
</script>

@await Html.PartialAsync("ErrorModelWindow", Model.RequestResult)
