@page
@model AdInfo
@{
    ViewData["Title"] = Model.AdViewModel.Name;
}


<style>
    .address-arrow {
        font-size: 0.8em;
        transition: transform 0.3s ease;
    }
    
    .address-container:hover .address-arrow {
        transform: rotate(-90deg);
    }
    
    .address-container:hover {
        cursor: pointer;
        animation: blink 1s infinite;
    }
    
    @@keyframes blink {
        0% { opacity: 1; }
        50% { opacity: 0.8; }
        100% { opacity: 1; }
    }
</style>
<style>
    .square-container {
        position: relative;
        width: 100%;
        padding-top: 100%; /* Высота контейнера равна его ширине, создавая квадрат */
        overflow: hidden;
    }
    
    .square-image {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        object-fit: cover; /* Сохраняет пропорции и обрезает изображение */
    }

</style>
<style>
    .btn-block {
        width: 100%;
    }

    #image-area {
        width: 100%;
        height: 500px;
        overflow: hidden;
        position: relative;
    }

    #image-area img {
        width: auto;
        height: 100%;
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        margin: auto;
    }

    .image-cell {
        width: 100px; /* Ширина ячейки */
        height: 100px; /* Высота ячейки */
        overflow: hidden; /* Скрытие избыточного контента */
        display: flex; /* Использование flexbox */
        align-items: center; /* Выравнивание по вертикали */
        justify-content: center; /* Выравнивание по горизонтали */
        margin: 0; /* Убираем отступы между ячейками */
    }

    .image-cell img {
        max-width: 100%; /* Максимальная ширина изображения внутри ячейки */
        max-height: 100%; /* Максимальная высота изображения внутри ячейки */
        width: auto; /* Автоматическое вычисление ширины для сохранения пропорций */
        height: auto; /* Автоматическое вычисление высоты для сохранения пропорций */
    }
</style>

<div class="row">
    <div class="col-6 text-left">
        <h2>@Model.AdViewModel.Name</h2>
    </div>
    <div class="col-3 text-end">
        <h2>@Model.AdViewModel.Price &#x20bd;</h2>
    </div>
    <div class="col-1 d-flex align-items-end">
        <form asp-page-handler="addToFavorites" method="post">
            <button type="submit" class="btn btn-primary">
                <img src="/icons/non_favorite_icon.png" alt="Добавить в избранное" width="24" height="24"/>
            </button>
        </form>
    </div>
</div>
<div class="row mt-3">
    <div class="col-9">
        <div class="row">
            <div class="col-md-1 text-center d-flex align-items-center justify-content-center">
                <button type="button" class="btn btn-secondary h-50" onclick="prevImage()">&#60;</button>
            </div>
            <div class="col-md-10 text-center">
                <div id="image-area" class="position-relative">
                    <img id="current-image" src="@(Model.BaseUrl + '/' + Model.AdViewModel.Images.First().LocalPath)" alt="Image" class="img-fluid">
                </div>
            </div>
            <div class="col-md-1 text-center d-flex align-items-center justify-content-center">
                <button type="button" class="btn btn-secondary h-50" onclick="nextImage()">&#62;</button>
            </div>
        </div>

        <!-- Контейнер для ячеек с изображениями -->
        <div id="thumbnails-container" class="row mt-3">
            @foreach (var image in Model.AdViewModel.Images.Skip(1)) // Пропускаем первое изображение, так как оно уже отображено в основном блоке
            {
                <div class="col-md text-center image-cell position-relative">
                    <img src="@(Model.BaseUrl + '/' + image.LocalPath)" class="img-thumbnail img-fluid " alt=""/>
                </div>
            }
        </div>
    </div>

    <!-- Продавец -->
    <div class="col-3">
        <div class="row mt-3">
            @if (!string.IsNullOrEmpty(@Model.AdViewModel.User.PhotoName))
            {
                <div class="square-container">
                    <img id="profile-photo" src="@(Model.BaseUrl + '/' + Model.AdViewModel.User.PhotoName)" alt="Фото профиля" class="img-fluid rounded-circle square-image" style="object-fit: cover;">
                </div>
            }
            else
            {
                <div class="square-container">
                    <img id="profile-photo" src="/Default/Images/Person/DefoultPersonImage.png" alt="Фото профиля" class="img-fluid rounded-circle square-image" style="object-fit: cover;">
                </div>
            }
        </div>
        <div class="row mt-3">
            @foreach (var contact in Model.AdViewModel.User.Contacts)
            {
                <div class="col-6">
                    <p>@contact.Name</p>
                </div>
                <div class="col-6">
                    <p>@contact.Description</p>
                </div>
            }
        </div>
    </div>

</div>

@if (!string.IsNullOrEmpty(Model.AdViewModel.YouTubeLink))
{
    <div class="row mt-3">
        <div class="col">
            <iframe width="560" height="315" src="@Model.AdViewModel.YouTubeLink"
                    title="YouTube video player" frameborder="0"
                    allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
                    allowfullscreen="true" referrerpolicy="strict-origin-when-cross-origin">
            </iframe>
        </div>
    </div>
}

<div class="row mt-3">
    <div class="col-md-12">
        <!-- Блок с характеристиками -->

        <div class="mb-3">
            <h1>Характеристики</h1>
            <div class="row">
                <div class="col-3">
                    <p>Состояние:</p>
                </div>
                <div class="col-3">
                    <p>@Model.AdViewModel.Condition</p>
                </div>
            </div>
            @if (@Model.AdViewModel.CategoryId.ToString().Equals("3666fab5-1175-4e6c-b9ac-ff9b811e7d8a"))
            {
                <div class="row">
                    <div class="col-3">
                        <p>Тип</p>
                    </div>
                    <div class="col-3">
                        <p>@Model.AdViewModel.WeaponType</p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-3">
                        <p>Расположение стволов:</p>
                    </div>
                    <div class="col-3">
                        <p>@Model.AdViewModel.BarrelPosition</p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-3">
                        <p>Калибр:</p>
                    </div>
                    <div class="col-3">
                        <p>@Model.AdViewModel.Caliber</p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-3">
                        <p>Год производства:</p>
                    </div>
                    <div class="col-3">
                        <p>@Model.AdViewModel.YearOfProduction</p>
                    </div>
                </div>
            }

        </div>

        <!-- Блок с описанием -->
        <div class="mb-3">
            <textarea value="@Model.AdViewModel.Description" class="form-control" placeholder="Описание" readonly></textarea>
        </div>

        <!-- Блок с геоданными -->
        <div class="row address-container">
            <div class="row mt-3">
                <div class="d-flex align-items-start justify-content-start">
                    <p id="address" class="mr-3">@Model.AdViewModel.Location.Address ▼</p>
                </div>
            </div>

            <div class="row mt-3">
                <div class="col">
                    <input type="hidden" id="latitude" value="@Model.AdViewModel.Location.Latitude" class="d-none">
                    <input type="hidden" id="longitude" value="@Model.AdViewModel.Location.Longitude" class="d-none">
                    <div class="map-container">
                        <div id="map" class="square" style="height: 400px"></div>
                    </div>
                </div>
            </div>
        </div>


        <div class="row mt-3">
            <div class="col">
                <p>Дата публикации: @Model.AdViewModel.CreationDateTime</p>
                <p>Просмотров: @Model.AdViewModel.CountOfViews</p>
                <p>Просмотров за сегодня: @Model.AdViewModel.CountOfViewsToday</p>
            </div>
        </div>
        <div class="row">
            <div class="col">
                <form asp-page-handler="complain" method="post">
                    <div class="mb-3">
                        <button type="submit" class="btn btn-danger btn-block">Пожаловаться</button>
                    </div>
                </form>
            </div>
        </div>

    </div>
</div>

<script src="https://api-maps.yandex.ru/2.1/?apikey=d8ed85d4-a4d3-4811-895b-20643a517a47&lang=ru_RU" type="text/javascript"></script>
<script type="text/javascript">
    const addressContainer = document.querySelector('.address-container');
    const address = document.querySelector('#address');
    const mapContainer = document.querySelector('.map-container');
    
    // Скрываем контейнер карты изначально
    mapContainer.style.display = 'none';
    
    addressContainer.addEventListener('click', () => {
        // Меняем видимость контейнера карты при клике на адрес
        if (mapContainer.style.display === 'none') {
            mapContainer.style.display = 'block';
        } else {
            mapContainer.style.display = 'none';
        }
    });


    var myMap;

    initializeMap();

    function initializeMap() {
        ymaps.ready(function () {
            let latitudeValue = parseFloat(document.getElementById('latitude').value.replace(',', '.'));
            let longitudeValue = parseFloat(document.getElementById('longitude').value.replace(',', '.'));

            myMap = new ymaps.Map("map", {
                center: [latitudeValue, longitudeValue],
                zoom: 7
            });

            var myGeoObject = new ymaps.GeoObject({
                geometry: {
                    type: "Point",
                    coordinates: [latitudeValue, longitudeValue]
                }
            });
            myMap.geoObjects.add(myGeoObject);
        });
    }
</script>

<script>
    let images = [];
    let currentImageIndex = 0;

    // Получаем все элементы img с классом img-thumbnail
    let thumbnailImages = document.querySelectorAll('.img-thumbnail');

    // Проходимся по каждому элементу и добавляем его src в массив images
    thumbnailImages.forEach(function(image) {
        images.push(image.src);
    });

    function prevImage() {
        if (images.length < 2)
            return;
        if (currentImageIndex > 0) {
            currentImageIndex--;
        } else {
            currentImageIndex = images.length - 1;
        }
        updateImage();
    }

    function nextImage() {
        if (images.length < 2)
            return;
        if (currentImageIndex < images.length - 1) {
            currentImageIndex++;
        } else {
            currentImageIndex = 0;
        }
        updateImage();
    }

    function updateImage() {
        let image = document.getElementById("current-image");
        image.src = images[currentImageIndex];
    }
</script>

@await Html.PartialAsync("ErrorModelWindow", Model.RequestResult)