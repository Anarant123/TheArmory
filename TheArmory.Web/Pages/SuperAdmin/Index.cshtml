@page
@model Index

<style>
    .admin-tile-container {
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
    }

    .admin-tile {
        flex: 0 1 calc(50% - 20px);
    }

    .pagination-container {
        margin-top: 20px;
    }

    .pagination .page-item {
        margin: 0 2px;
    }

    .pagination .page-item.active .page-link {
        background-color: #007bff;
        border-color: #007bff;
    }
</style>

<div class="container d-flex flex-column min-vh-100">
    <div class="row mb-3">
        <div class="col-12">
            <a class="btn btn-primary" asp-page="/SuperAdmin/Registration"><i class="bi bi-plus-lg"></i> Зарегистрировать</a>
        </div>
    </div>

    <div class="row admin-tile-container flex-grow-1">
        @if (Model.Admins is not null && Model.Admins.Any())
        {
            @foreach (var admin in Model.Admins)
            {
                admin.BaseUrl = Model.BaseUrl;
                <div class="admin-tile">
                    @await Html.PartialAsync("AdminTile", admin)
                </div>
            }
        }
        else
        {
            <div class="col-12">
                <h1>Администраторов не найдено</h1>
            </div>
        }
    </div>

    <div class="pagination-container mt-auto">
        <form method="post">
            <div class="row">
                <input type="hidden" id="pageNumber" asp-for="@Model.QueryParams.PageNumber"/>
                <div class="col-12">
                    <nav aria-label="Page navigation">
                        <ul class="pagination justify-content-center" id="pagination">
                            <li class="page-item @((Model.QueryResult.PageNumber == 1) ? "d-none" : "")">
                                <button type="submit" class="page-link" tabindex="-1" aria-disabled="true" onclick="paginate(this)">&#60;</button>
                            </li>
                            @for (var i = 1; i <= Model.QueryResult.TotalPages; i++)
                            {
                                <li class="page-item @((Model.QueryResult.PageNumber == i) ? "active" : "")">
                                    <button type="submit" class="page-link" onclick="paginate(this)">@i</button>
                                </li>
                            }
                            <li class="page-item @((Model.QueryResult.PageNumber == Model.QueryResult.TotalPages) ? "d-none" : "")">
                                <button type="submit" class="page-link" onclick="paginate(this)">&#62;</button>
                            </li>
                        </ul>
                    </nav>
                </div>
            </div>
        </form>
    </div>
</div>

@await Html.PartialAsync("ErrorModelWindow", Model.Result)

<script>
    function paginate(button) {
        var pageNumber = button.textContent;
        var pageNumberInput = document.getElementById("pageNumber");
        
        if (pageNumber != "<" && pageNumber != ">") {
            pageNumberInput.value = pageNumber;
        } else if (pageNumber == "<") {
            pageNumberInput.value = @Model.QueryResult.PageNumber - 1;
        } else if (pageNumber == ">") {
            pageNumberInput.value = @Model.QueryResult.PageNumber + 1;
        }
    }
</script>