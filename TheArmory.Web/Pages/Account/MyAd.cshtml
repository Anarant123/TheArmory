@page
@using TheArmory.Domain.Models.Enums
@model MyAd

@{
    ViewData["Title"] = "Настройка";
}

<style>
    .btn-block {
        width: 100%;
    }
    
    #image-area {
        width: 100%;
        height: 500px;
        overflow: hidden;
        position: relative;
    }
    
    #image-area img {
        width: auto;
        height: 100%;
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        margin: auto;
    }
    
    .image-cell {
        width: 100px;
        height: 100px; 
        overflow: hidden; 
        display: flex;
        align-items: center; 
        justify-content: center; 
        margin: 0; 
        }
    
    .image-cell img {
        max-width: 100%; 
        max-height: 100%; 
        width: auto; 
        height: auto; 
        }
            
    .marker-container {
        position: relative; 
        width: 100%; 
        height: 100%; 
    }
    
    .marker {
        position: absolute; 
        top: 50%; 
        left: 50%;
        transform: translate(-50%, -50%);
        margin-top: -220px;
    }
        
</style>

@await Html.PartialAsync("ErrorModelWindow", Model.Result)

<div class="row mt-3">
    @if (Model.MyAdViewModel.StatusId.Equals(StateStatus.Actively))
    {
        <form method="post" asp-page-handler="Deactivate">
            <div class="col">
                <button type="submit" class="btn btn-primary btn-block">Снять с публикации</button>
            </div>
        </form>
    }
    @if (Model.MyAdViewModel.StatusId.Equals(StateStatus.Inactive))
    {
        <form method="post" asp-page-handler="Activate">
            <div class="col">
                <button type="submit" class="btn btn-primary btn-block">Опубликовать</button>
            </div>
        </form>
    }
    <div class="col">
        <a class="btn btn-danger btn-block" asp-page="/Account/PersonalInfo">Отменить и выйти</a>
    </div>
</div>

<form method="post" enctype="multipart/form-data" id="form">

    <div class="row mt-3">
        <div class="col-md-12">
            <div class="row">

                <h1>Параметры</h1>
                <div class="row mt-3">
                    <div class="col-3">
                        <label asp-for="Command.Name" class="form-label">Наименование:</label>
                    </div>
                    <div class="col-9">
                        <input type="text" asp-for="Command.Name" class="form-control" value="@Model.MyAdViewModel.Name" placeholder="Введите наименование" maxlength="255" required="Обязательно к заполнению">
                        <span asp-validation-for="Command.Name" class="text-danger"></span>
                    </div>
                </div>

                <div class="row mt-3">
                    <div class="col-3">
                        <label asp-for="Command.ConditionId" class="form-label">Состояние:</label>
                    </div>
                    <div class="col-9">
                        <select asp-for="Command.ConditionId" class="form-select" required="Обязательно к заполнению">
                            <option value="@Model.PublishInfoViewModel.Conditions.First(c => c.Id.Equals(Model.MyAdViewModel.ConditionId)).Id">@Model.PublishInfoViewModel.Conditions.First(c => c.Id.Equals(Model.MyAdViewModel.ConditionId)).Name</option>
                            @foreach (var condition in Model.PublishInfoViewModel.Conditions.Where(condition => !condition.Id.Equals(Model.MyAdViewModel.ConditionId)))
                            {
                                <option value="@condition.Id">@condition.Name</option>
                            }
                        </select>
                    </div>
                </div>
            </div>

            <div class="row">
                <h1>Подробности</h1>
                <div class="row mt-3">
                    <div class="col-3">
                        <label asp-for="Command.Description" class="form-label">Описание:</label>
                    </div>
                    <div class="col-9">
                        <input type="text" asp-for="Command.Description" value="@Model.MyAdViewModel.Description" class="form-control" placeholder="Введите описание" oninput="autoResize(this)" maxlength="2000"/>
                    </div>
                </div>
                <div class="row mt-3">
                    <div class="col-3">
                        <label asp-for="Command.Price" class="form-label">Цена:</label>
                    </div>
                    <div class="col-9">
                        <input type="number" asp-for="Command.Price" class="form-control" value="@Model.MyAdViewModel.Price" placeholder="Введите цену" oninput="validatePrice(this)" required="Обязательно к заполнению">
                    </div>
                </div>
                <div class="row mt-3">
                    <div class="col-3">
                        <label asp-for="Command.CategoryId" class="form-label">Категория:</label>
                    </div>
                    <div class="col-9">
                        <select asp-for="Command.CategoryId" id="categorySelect" class="form-select" required="Обязательно к заполнению">
                            <option value="@Model.PublishInfoViewModel.Categories.First(c => c.Id.Equals(Model.MyAdViewModel.CategoryId)).Id">@Model.PublishInfoViewModel.Categories.First(c => c.Id.Equals(Model.MyAdViewModel.CategoryId)).Name</option>
                            @foreach (var category in Model.PublishInfoViewModel.Categories.Where(condition => !condition.Id.Equals(Model.MyAdViewModel.CategoryId)))
                            {
                                <option value="@category.Id">@category.Name</option>
                            }
                        </select>
                    </div>
                </div>

                <div id="characteristics-block" style="display: none">
                    <h1>Характеристики</h1>
                    <div class="row mt-3">
                        <div class="col-3">
                            <label asp-for="Command.WeaponTypeId" class="form-label">Тип:</label>
                        </div>
                        <div class="col-9">
                            <select asp-for="Command.WeaponTypeId" id="categorySelect" class="form-select" required="Обязательно к заполнению">
                                @if (Model.MyAdViewModel.WeaponTypeId != Guid.Empty)
                                {
                                    <option value="@Model.PublishInfoViewModel.WeaponTypes.First(c => c.Id.Equals(Model.MyAdViewModel.WeaponTypeId)).Id">@Model.PublishInfoViewModel.WeaponTypes.First(c => c.Id.Equals(Model.MyAdViewModel.WeaponTypeId)).Name</option>
                                }
                                @foreach (var type in Model.PublishInfoViewModel.WeaponTypes.Where(condition => !condition.Id.Equals(Model.MyAdViewModel.WeaponTypeId)))
                                {
                                    <option value="@type.Id">@type.Name</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="row mt-3">
                        <div class="col-3">
                            <label asp-for="Command.CaliberId" class="form-label">Калибр:</label>
                        </div>
                        <div class="col-9">
                            <select asp-for="Command.CaliberId" id="categorySelect" class="form-select" required="Обязательно к заполнению">
                                @if (Model.MyAdViewModel.CaliberId != Guid.Empty)
                                {
                                    <option value="@Model.PublishInfoViewModel.Calibers.First(c => c.Id.Equals(Model.MyAdViewModel.CaliberId)).Id">@Model.PublishInfoViewModel.Calibers.First(c => c.Id.Equals(Model.MyAdViewModel.CaliberId)).Name</option>
                                }
                                @foreach (var caliber in Model.PublishInfoViewModel.Calibers.Where(condition => !condition.Id.Equals(Model.MyAdViewModel.CaliberId)))
                                {
                                    <option value="@caliber.Id">@caliber.Name</option>
                                }
                            </select>
                        </div>
                    </div>

                    <div class="row mt-3">
                        <div class="col-3">
                            <label asp-for="Command.BarrelPositionId" class="form-label">Расположение ствола:</label>
                        </div>
                        <div class="col-9">
                            <select asp-for="Command.BarrelPositionId" id="categorySelect" class="form-select" required="Обязательно к заполнению">
                                @if (Model.MyAdViewModel.BarrelPositionId != Guid.Empty)
                                {
                                    <option value="@Model.PublishInfoViewModel.BarrelPositions.First(c => c.Id.Equals(Model.MyAdViewModel.BarrelPositionId)).Id">@Model.PublishInfoViewModel.BarrelPositions.First(c => c.Id.Equals(Model.MyAdViewModel.BarrelPositionId)).Name</option>
                                }
                                @foreach (var position in Model.PublishInfoViewModel.BarrelPositions.Where(condition => !condition.Id.Equals(Model.MyAdViewModel.BarrelPositionId)))
                                {
                                    <option value="@position.Id">@position.Name</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="row mt-3">
                        <div class="col-3">
                            <label asp-for="Command.YearOfProduction" class="form-label">Год выпуска:</label>
                        </div>
                        <div class="col-9">
                            <select asp-for="Command.YearOfProduction" class="form-select">
                                @if (Model.MyAdViewModel.YearOfProduction != 0)
                                {
                                    <option value="@Model.MyAdViewModel.YearOfProduction">@Model.MyAdViewModel.YearOfProduction</option>
                                }
                                @for (var i = DateTime.Now.Year; i >= 1900; i--)
                                {
                                    if (!i.Equals(@Model.MyAdViewModel.YearOfProduction))
                                    {
                                        <option value="@i">@i</option>
                                    }
                                }
                            </select>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="row mt-3">
                    <div class="col-md-1 text-center d-flex align-items-center justify-content-center">
                        <button type="button" class="btn btn-secondary h-50" onclick="prevImage()">&#60;</button>
                    </div>
                    <div class="col-md-10 text-center">
                        <div id="image-area" class="position-relative">
                            <img id="current-image" src="@(Model.BaseUrl + '/' + Model.MyAdViewModel.Images.First().LocalPath)" alt="Image" class="img-fluid">
                        </div>
                    </div>
                    <div class="col-md-1 text-center d-flex align-items-center justify-content-center">
                        <button type="button" class="btn btn-secondary h-50" onclick="nextImage()">&#62;</button>
                    </div>
                </div>

                <!-- Контейнер для ячеек с изображениями -->
                <div id="thumbnails-container" class="row mt-3">
                    @foreach (var image in Model.MyAdViewModel.Images) // Пропускаем первое изображение, так как оно уже отображено в основном блоке
                    {
                        <div class="col-md text-center image-cell position-relative">
                            <img src="@(Model.BaseUrl + '/' + image.LocalPath)" class="img-thumbnail img-fluid " alt=""/>
                        </div>
                    }
                </div>
            </div>

            <div class="row">
                <h1>Видео</h1>
                <div class="row mt-3">
                    <div class="col-3">
                        <label asp-for="Command.YouTubeLink" class="form-label">Ссылка на YouTube видео с обзором:</label>
                    </div>
                    <div class="col-9">
                        <div class="row">
                            <input type="text" asp-for="Command.YouTubeLink" value="@Model.MyAdViewModel.YouTubeLink" class="form-control" placeholder="Введите ссылку на YouTube видео">
                            <span asp-validation-for="Command.YouTubeLink" class="text-danger"></span>
                        </div>
                        <div id="youtubeVideo" class="row mt-3" style="display: none;">
                            <iframe id="videoFrame" width="560" height="315" frameborder="0" allowfullscreen></iframe>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row address-container">
                <div class="row mt-3">
                    <div class="d-flex align-items-start justify-content-start">
                        <input type="text" id="addressInfo" asp-for="Command.Address" value="@Model.MyAdViewModel.Location.Address" class="form-control" placeholder="Адрес" readonly="">
                    </div>
                </div>

                <div class="row mt-3">
                    <div class="col">
                        <input type="hidden" id="latitude" value="@Model.MyAdViewModel.Location.Latitude" class="d-none">
                        <input type="hidden" id="longitude" value="@Model.MyAdViewModel.Location.Longitude" class="d-none">
                        <div class="map-container">
                            <div id="map" class="square" style="height: 400px"></div>
                            <div class="marker-container">
                                <img src="/icons/map_marker.png" class="marker" alt=""/>
                            </div>
                        </div>
                    </div>
                </div>
            </div>


            <div class="row mt-3">
                <div class="col">
                    <button type="submit" class="btn btn-primary btn-block">Сохранить изменения</button>
                </div>
                <div class="col">
                    <a class="btn btn-danger btn-block" asp-page="/Account/PersonalInfo">Отменить и выйти</a>
                </div>
            </div>
        </div>
    </div>
</form>

<script src="https://api-maps.yandex.ru/2.1/?apikey=d8ed85d4-a4d3-4811-895b-20643a517a47&lang=ru_RU" type="text/javascript"></script>
<script type="text/javascript">
    var myMap;
    initializeMap();
        
    function initializeMap() {
        ymaps.ready(function () {
            let latitudeValue = parseFloat(document.getElementById('latitude').value.replace(',', '.'));
            let longitudeValue = parseFloat(document.getElementById('longitude').value.replace(',', '.'));
        
            myMap = new ymaps.Map("map", {
                center: [latitudeValue, longitudeValue],
                zoom: 7
            });
        
            var myGeoObject = new ymaps.GeoObject({
                geometry: {
                    type: "Point",
                    coordinates: [latitudeValue, longitudeValue]
                }
            });
                    
            myMap.geoObjects.add(myGeoObject);
                    
            myMap.events.add('boundschange', function (event) {
                var newCenter = event.get('newCenter');
                latitude = newCenter[0];
                longitude = newCenter[1];
                                        
                let latitudeInfo = document.getElementById('latitude');
                latitudeInfo.value = latitude;
                let longitudeInfo = document.getElementById('longitude');
                longitudeInfo.value = longitude;
                                        
                ymaps.geocode(myGeoObject.geometry.getCoordinates()).then(function (res) {
                var firstGeoObject = res.geoObjects.get(0);
                let address = document.getElementById('addressInfo');
                address.value = firstGeoObject.getAddressLine();
                });
                                        
            });
        });
    }
</script>
<script>
    function autoResize(textarea) {
        textarea.style.height = 'auto'; // Устанавливаем высоту текстового поля в режиме авто
        textarea.style.height = (textarea.scrollHeight) + 'px'; // Устанавливаем высоту текстового поля равной его высоте контента
    }
    
    function validatePrice(input) {
        input.value = input.value.replace(/[^0-9.]/g, ''); // Заменяем все символы, кроме цифр и точки, на пустую строку
        // Удалить лишние точки
        let countDots = (input.value.match(/\./g) || []).length; // Подсчитываем количество точек в значении поля ввода
        if (countDots > 1) { // Если количество точек больше 1
            input.value = input.value.replace(/\./g, ''); // Удаляем все точки из значения поля ввода, кроме первой
        }
    }
    
     let images = [];
     let currentImageIndex = 0;
     
     // Получаем все элементы img с классом img-thumbnail
     let thumbnailImages = document.querySelectorAll('.img-thumbnail');
     
     // Проходимся по каждому элементу и добавляем его src в массив images
     thumbnailImages.forEach(function(image) {
         images.push(image.src);
     });
     
     function prevImage() {
         if (images.length < 2)
             return;
         if (currentImageIndex > 0) {
             currentImageIndex--;
         } else {
            currentImageIndex = images.length - 1;
         }
         updateImage();
     }
     
     function nextImage() {
         if (images.length < 2)
             return;
         if (currentImageIndex < images.length - 1) {
             currentImageIndex++;
         } else {
             currentImageIndex = 0;
         }
         updateImage();
     }
     
     function updateImage() {
         let image = document.getElementById("current-image");
         image.src = images[currentImageIndex];
     }

    
    function handleFileSelect(event) {
        if (images.length >= 5) { 
            alert("Вы уже добавили максимальное количество изображений.");
            return;
        }
    
        let files = event.target.files;
        let thumbnailsContainer = document.getElementById('thumbnails-container');
        let numberOfImagesToAdd = Math.min(files.length, 5 - images.length); 
        let numberOfImagesAdded = 0;
    
        for (let i = 0; i < files.length && numberOfImagesAdded < numberOfImagesToAdd; i++) {
            let reader = new FileReader();
            reader.onload = function (e) {
                let arrayBuffer = e.target.result; 
        
                images.push(arrayBuffer);
        
                let thumbnailContainer = document.createElement('div');
                thumbnailContainer.className = 'col-md text-center image-cell position-relative';
                let thumbnail = document.createElement('img');
                thumbnail.className = 'img-thumbnail img-fluid';
                
                let blob = new Blob([new Uint8Array(arrayBuffer)], { type: 'image/jpeg' });
                thumbnail.src = URL.createObjectURL(blob);
        
                thumbnailContainer.appendChild(thumbnail);
                thumbnailsContainer.appendChild(thumbnailContainer);
        
                numberOfImagesAdded++;
                currentImageIndex = images.length - 1; 
                updateImage();
        
                if (images.length === 5) { 
                    document.querySelectorAll('.image-controls').forEach(function (element) {
                        element.style.display = 'flex';
                    });
                }
            };
            reader.readAsArrayBuffer(files[i]); 
        }
    }
    document.getElementById('file-input').addEventListener('change', handleFileSelect, false);
    
    function removeImage(index) {
        images.splice(index, 1);
        let thumbnailsContainer = document.getElementById('thumbnails-container');
        thumbnailsContainer.removeChild(thumbnailsContainer.childNodes[index]);
        if (currentImageIndex === index) {
            if (currentImageIndex === images.length) {
                currentImageIndex--;
            }
            updateImage();
        } else if (currentImageIndex > index) {
            currentImageIndex--;
        }
        if (images.length < 5) {
            document.querySelectorAll('.image-controls').forEach(function (element) {
                element.style.display = 'none';
            });
        }
    }
    document.querySelector('.btn-danger').addEventListener('click', function () {
        removeImage(currentImageIndex);
    });

    const categorySelect = document.getElementById('categorySelect');
    const characteristicsBlock = document.getElementById('characteristics-block');
    const huntingCategoryId = '3666fab5-1175-4e6c-b9ac-ff9b811e7d8a'; // замените на реальный ID
    if (categorySelect.value === huntingCategoryId) 
        characteristicsBlock.style.display = 'block'
        
    categorySelect.addEventListener('change', function() {
        const selectedCategoryId = categorySelect.value;
            
        if (selectedCategoryId === huntingCategoryId) {
            characteristicsBlock.style.display = 'block';
        } else {
            characteristicsBlock.style.display = 'none';
        }
    });
    
</script>