@page
@model TheArmory.Web.Pages.Account.PersonalInfo

@{
    ViewData["Title"] = "Персональная информация";
}

<style>
    .square-container {
        position: relative;
        width: 100%;
        padding-top: 100%; /* Высота контейнера равна его ширине, создавая квадрат */
        overflow: hidden;
    }
    
    .square-image {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        object-fit: cover; /* Сохраняет пропорции и обрезает изображение */
    }

</style>

<div class="row">
    <div class="col-md-10">
        <div class="container">
            <div class="row">
                <!-- Фото профиля -->
                <div class="col-3">
                    <form method="post" enctype="multipart/form-data" id="changePhotoForm" asp-page-handler="ChangePhoto">
                        <div class="row">
                            @if (!string.IsNullOrEmpty(@Model.User.PhotoName))
                            {
                                <div class="square-container">
                                    <img id="profile-photo" src="@(Model.BaseUrl + '/' + Model.User.PhotoName)" alt="Фото профиля" class="img-fluid rounded-circle square-image">
                                </div>
                            }
                            else
                            {
                                <div class="square-container">
                                    <img id="profile-photo" src="/Default/Images/Person/DefoultPersonImage.png" alt="Фото профиля" class="img-fluid rounded-circle square-image">
                                </div>
                            }
                        </div>
                        <div class="row mt-2">
                            
                            <input type="file" id="file-input" asp-for="ChangeProfilePhotoCommand.Photo" accept="image/*" multiple="multiple" style="display: none;">
                            <button type="submit" id="save-photo-btn" class="btn btn-primary my-1" style="display: none;">Сохранить</button>
                            <button type="button" id="cancel-photo-btn" class="btn btn-danger" style="display: none;">Отмена</button>
                        </div>
                    </form>
                </div>

                <!-- Информация о пользователе -->
                <div class="col-md-9">
                    <h4>Ваши данные</h4>
                    <form>
                        <div class="form-group">
                            <input type="text" id="name" name="name" value="@Model.User.Name" class="form-control" readonly>
                        </div>
                        <div class="form-group">
                            <input type="text" id="phoneNumber" name="phoneNumber" value="@Model.User.PhoneNumber" class="form-control" readonly>
                        </div>
                        <div class="form-group">
                            <input type="email" id="email" name="email" value="@Model.User.Email" class="form-control" readonly>
                        </div>
                        <div class="form-group">
                            <label for="registrationDateTime">Дата регистрации:</label>
                            <input type="text" id="registrationDateTime" name="registrationDateTime" value="@Model.User.RegistrationDateTime" class="form-control" readonly>
                        </div>
                        <div class="form-group">
                            <input type="text" id="regionId" name="regionId" value="@Model.User.Region.Name" class="form-control" readonly>
                        </div>
                        <div class="form-group">
                            <input type="text" id="statusId" name="statusId" value="@Model.User.Status.Name" class="form-control" readonly>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-2">
        @await Html.PartialAsync("SideBar")
    </div>
</div>

<!-- Типы объявлений -->
<div class="row mt-3">
    <div class="col-md-12">
        <ul class="nav nav-tabs" id="myTab" role="tablist">
            <li class="nav-item" role="presentation">
                <button class="nav-link active" id="active-tab" data-bs-toggle="tab" data-bs-target="#active" type="button" role="tab" aria-controls="active" aria-selected="true">Активные</button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="inactive-tab" data-bs-toggle="tab" data-bs-target="#inactive" type="button" role="tab" aria-controls="inactive" aria-selected="false">Неактивные</button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="banned-tab" data-bs-toggle="tab" data-bs-target="#banned" type="button" role="tab" aria-controls="banned" aria-selected="false">В бане</button>
            </li>
        </ul>
    </div>
</div>

<!-- Контент для каждого типа объявлений -->
<div class="row mt-3">
    <div class="col-md-12">
        <div class="tab-content" id="myTabContent">
            <div class="tab-pane fade show active" id="active" role="tabpanel" aria-labelledby="active-tab">
                <!-- Плитки с активными объявлениями -->
                <div class="row">
                    @if (Model.TileActiveAds is not null && Model.TileActiveAds.Any())
                    {
                        @foreach (var ad in Model.TileActiveAds)
                        {
                            ad.BaseUrl = Model.BaseUrl;
                            <div class="col-md-2 mb-3">
                                @await Html.PartialAsync("Ads/AdTile", ad)
                            </div>
                        }
                    }
                    else
                    {
                        <h1>Активных объявлений не найдено</h1>
                    }
                </div>
            </div>
            <div class="tab-pane fade" id="inactive" role="tabpanel" aria-labelledby="inactive-tab">
                <!-- Плитки с неактивными объявлениями -->
                <div class="row">
                    @if (Model.TileActiveAds is not null && Model.TileActiveAds.Any())
                    {
                        @foreach (var ad in Model.TileActiveAds)
                        {
                            ad.BaseUrl = Model.BaseUrl;
                            <div class="col-md-2 mb-3">
                                @await Html.PartialAsync("Ads/AdTile", ad)
                            </div>
                        }
                    }
                    else
                    {
                        <h1>Неактивных объявлений не найдено</h1>
                    }
                </div>
            </div>
            <div class="tab-pane fade" id="banned" role="tabpanel" aria-labelledby="banned-tab">
                <!-- Плитки с объявлениями в бане -->
                <div class="row">
                    @if (Model.TileActiveAds is not null && Model.TileActiveAds.Any())
                    {
                        @foreach (var ad in Model.TileActiveAds)
                        {
                            ad.BaseUrl = Model.BaseUrl;
                            <div class="col-md-2 mb-3">
                                @await Html.PartialAsync("Ads/AdTile", ad)
                            </div>
                        }
                    }
                    else
                    {
                        <h1>Объявлений в бане не найдено</h1>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<script> 
    let images; 
    let imageUrl = document.getElementById("profile-photo").src;
    
    function updateImage() {
        let image = document.getElementById("profile-photo");
        let blob = new Blob([new Uint8Array(images)], { type: 'image/jpeg' });
        image.src = URL.createObjectURL(blob);
    }
    
    // Обработчик события клика на изображении профиля для выбора файла
    document.getElementById('profile-photo').addEventListener('click', function() {
        document.getElementById('file-input').click();
    });
    
    // Функция для обновления изображения при выборе файла
    function handleFileSelect(event) {
        let files = event.target.files;
    
        if (files.length > 0) {
            let reader = new FileReader();
            reader.onload = function (e) {
                let arrayBuffer = e.target.result; 
    
                let image = document.getElementById("profile-photo");
                let blob = new Blob([new Uint8Array(arrayBuffer)], { type: 'image/jpeg' });
                   image.src = URL.createObjectURL(blob);
            };
            reader.readAsArrayBuffer(files[0]); // Читаем только первый файл
        }
        document.getElementById('save-photo-btn').style.display = 'inline-block';
        document.getElementById('cancel-photo-btn').style.display = 'inline-block';
    }
    
    // Добавляем обработчик события change на элемент file-input
    document.getElementById('file-input').addEventListener('change', handleFileSelect, false);

    // Функция для удаления фото и возвращения предыдущего изображения
    function removeImage() {
        let image = document.getElementById("profile-photo");
        image.src = imageUrl;
        document.getElementById('file-input').value = ""; 
        document.getElementById('save-photo-btn').style.display = 'none';
        document.getElementById('cancel-photo-btn').style.display = 'none';
    }
    document.getElementById('cancel-photo-btn').addEventListener('click', function () {
                removeImage();
    });

</script>